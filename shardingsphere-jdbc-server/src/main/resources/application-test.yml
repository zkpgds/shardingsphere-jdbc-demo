spring:
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: GMT+8
  redis:
    host: 127.0.0.1
    password: 123456
    port: 6379
  servlet:
    multipart:
      enabled: true
      max-file-size: 400MB
      max-request-size: 400MB
  datasource:
    driver-class-name: org.apache.shardingsphere.driver.ShardingSphereDriver
    url: jdbc:shardingsphere:classpath:sharding.yaml
#  sharding-sphere:
#    datasource:
#      ds0:
#        driverClassName: com.mysql.cj.jdbc.Driver
#        password: 123456
#        type: com.alibaba.druid.pool.DruidDataSource
#        url: jdbc:mysql://127.0.0.1:3317/ds_0?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=GMT%2B8&useTimezone=true
#        username: root
#      ds1:
#        driverClassName: com.mysql.cj.jdbc.Driver
#        password: 123456
#        type: com.alibaba.druid.pool.DruidDataSource
#        url: jdbc:mysql://127.0.0.1:3317/ds_1?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=GMT%2B8&useTimezone=true
#        username: root
#      ds2:
#        driverClassName: com.mysql.cj.jdbc.Driver
#        password: 123456
#        type: com.alibaba.druid.pool.DruidDataSource
#        url: jdbc:mysql://127.0.0.1:3317/ds_2?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=GMT%2B8&useTimezone=true
#        username: root
#      ds3:
#        driverClassName: com.mysql.cj.jdbc.Driver
#        password: 123456
#        type: com.alibaba.druid.pool.DruidDataSource
#        url: jdbc:mysql://127.0.0.1:3317/ds_3?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=GMT%2B8&useTimezone=true
#        username: root
#      enabled: true
#      names: ds0,ds1,ds2,ds3
#    props:
#      sql:
#        show: true
#    sharding:
#      bindingTables: '[t_ent_order,t_ent_order_detail]'
#      tables:
#        t_ent_order:
#          actualDataNodes: ds$->{0..3}.t_ent_order
#          databaseStrategy:
#            complex:
#              algorithm-class-name: com.courage.shardingsphere.jdbc.service.sharding.HashSlotAlgorithm
#              sharding-columns: id,ent_id
#          tableStrategy:
#            none: 'null'
#        t_ent_order_detail:
#          actualDataNodes: ds$->{0..3}.t_ent_order_detail
#          databaseStrategy:
#            complex:
#              algorithm-class-name: com.courage.shardingsphere.jdbc.service.sharding.HashSlotAlgorithm
#              sharding-columns: id,ent_id
#          tableStrategy:
#            complex:
#              algorithm-class-name: com.courage.shardingsphere.jdbc.service.sharding.HashSlotAlgorithm
#              sharding-columns: id,ent_id
#        t_ent_order_item:
#          actualDataNodes: ds$->{0..3}.t_ent_order_item_$->{0..7}
#          databaseStrategy:
#            complex:
#              algorithm-class-name: com.courage.shardingsphere.jdbc.service.sharding.HashSlotAlgorithm
#              sharding-columns: id,ent_id
#          tableStrategy:
#            complex:
#              algorithm-class-name: com.courage.shardingsphere.jdbc.service.sharding.HashSlotAlgorithm
#              sharding-columns: id,ent_id



